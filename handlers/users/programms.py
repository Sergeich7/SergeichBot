
from aiogram import types

from loader import dp

full_text = """
<b>Программы</b>

Здесь только самые интересные проекты. Иходный код и другие программы Вы найдете на <a href='https://github.com/Sergeich7'>GitHub</a>

\U00002705 <b><i>БОТЫ ТЕЛЕГРАМ</i></b>

<b><i>Бот Сергеич</i></b> - Да! Да! \U0001f604 Этот самый бот. Разработан в демонстрационных целях.

\U00002705 <b><i>ПАРСЕРЫ</i></b>

<b><i>HH</i></b> - вытаскивает с hh.ru все отклики на живые вакансии и сохраняет в Excel или Google Sheets. 500 откликов парсит примерно за 2.5 часа.

<b><i>ЛесХоз</i></b> - с сайта lesegais.ru программа выкачивает всю информацию по сделкам с древесиной. Пришлось запустить 2 потока на встречу друг другу. И все равно парсинг длится ~19 часов (~220000 сделок).

<b><i>Экологи</i></b> - на сайте climatescape.org получаем ссылки (~1700) на страницы различных экологических организаций. В мультипочточном режиме выбираем контакты с этих страниц и сохраняем в файл Excel

<b><i>Вакансий врачей</i></b> - получает сайта zarplata.ru список вакансий врачей с телефонами. На сайте телефоны скрыты, пока не нажмешь ПОКАЗАТЬ

"""

#<b><i>Афиша</i></b> - Парсер получает информацию о концертах с нескольких сайтов (типа jazzesse.ru). Программа разработана с использованием ООП. И предусмотрена возможность быстрого добавлению новых сайтов.
#

@dp.message_handler(commands=["progs"])
@dp.message_handler(lambda message: message.text == "Программы")
async def command_programms(message: types.Message):
    await message.answer(
        full_text, parse_mode=types.ParseMode.HTML,
                disable_web_page_preview=False)
#                disable_web_page_preview=True)
